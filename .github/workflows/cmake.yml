name: CMake build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            generator: "Visual Studio 17 2022",
            build_type: "Debug",
            cc: "cl", cxx: "cl",
            extra_path: "",
          }
        - {
            name: "Windows Latest MinGW",
            os: windows-latest,
            generator: "MinGW Makefiles",
            build_type: "Debug",
            cc: "gcc", cxx: "g++",
            # will be filled by choco install
            extra_path: "C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin",
          }
        - {
            name: "Ubuntu 24.04 GCC",
            os: ubuntu-24.04,
            generator: "Unix Makefiles",
            build_type: "Debug",
            cc: "gcc", cxx: "g++",
            extra_path: "",
          }
        - {
            name: "Ubuntu 22.04 GCC",
            os: ubuntu-22.04,
            generator: "Unix Makefiles",
            build_type: "Debug",
            cc: "gcc", cxx: "g++",
            extra_path: "",
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            generator: "Unix Makefiles",
            build_type: "Debug",
            cc: "clang", cxx: "clang++",
            extra_path: "",
          }

    steps:
    - name: Checkout ${{ github.ref_name }}
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    # Make MinGW job deterministic (provides mingw32-make.exe for the generator)
    - name: Install MinGW (Windows MinGW only)
      if: matrix.config.generator == 'MinGW Makefiles' && runner.os == 'Windows'
      shell: powershell
      run: choco install -y mingw

    - name: set extra GITHUB_PATH ${{ matrix.config.extra_path }} (for MinGW)
      if: matrix.config.extra_path != ''
      shell: bash
      run: echo "${{ matrix.config.extra_path }}" >> $GITHUB_PATH

    - name: set env CC/CXX
      shell: cmake -P {0}
      run: |
        set(ENV{CC} ${{ matrix.config.cc }})
        set(ENV{CXX} ${{ matrix.config.cxx }})

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "${{ matrix.config.generator }}" \
          -DCMAKE_VERBOSE_MAKEFILE=ON \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -DBUILD_SHARED_LIBS=ON \
          -DSQLITECPP_BUILD_TESTS=ON \
          -DSQLITECPP_BUILD_EXAMPLES=ON \
          -DSQLITECPP_RUN_CPPCHECK=OFF \
          -DSQLITECPP_RUN_CPPLINT=OFF ..
    - name: Build
      run: cmake --build build --config ${{ matrix.config.build_type }} -j2
    - name: Test
      run: ctest --verbose --output-on-failure --test-dir build -C ${{ matrix.config.build_type }}
